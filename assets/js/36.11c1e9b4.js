(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{431:function(a,_,e){"use strict";e.r(_);var t=e(56),v=Object(t.a)({},(function(){var a=this,_=a.$createElement,e=a._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"数据对象规格说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据对象规格说明"}},[a._v("#")]),a._v(" 数据对象规格说明")]),a._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("数据对象除了属性和方法的定义, 还有更多高级定义方式")])]),a._v(" "),e("li",[e("p",[a._v("其实现数据对象的关系定义主要放置在类"),e("code",[a._v("DataObjectSpec")]),a._v("里"),e("code",[a._v("DataObjectRelation")]),a._v("里")])]),a._v(" "),e("li",[e("p",[a._v("DataObjectSpec")]),a._v(" "),e("ul",[e("li",[a._v("路径   : core/model/dataobject/")]),a._v(" "),e("li",[a._v("文件名称: DataObjectSpec.php")])])]),a._v(" "),e("li",[e("p",[a._v("DataObjectRelation")]),a._v(" "),e("ul",[e("li",[a._v("路径   : core/model/dataobject/")]),a._v(" "),e("li",[a._v("文件名称: DataObjectRelation.php")])])]),a._v(" "),e("li",[e("p",[a._v("数据对象的规格说明默认定义变量如下:")]),a._v(" "),e("ol",[e("li",[a._v("$field_spec       : 列规格定义说明")]),a._v(" "),e("li",[a._v("$has_one          : 一对一关系说明")]),a._v(" "),e("li",[a._v("$belong_has_one   : 从属一对一关系说明")]),a._v(" "),e("li",[a._v("$has_many         : 一对多关系说明")]),a._v(" "),e("li",[a._v("$many_many        : 多对多关系说明")]),a._v(" "),e("li",[a._v("$belongs_many_many: 从属于多对多关系说明")])])]),a._v(" "),e("li",[e("p",[a._v("除第一个变量用于列规格说明外, 其它变量都用于表[类]关系说明;")])]),a._v(" "),e("li",[e("p",[a._v("第一个变量为实例变量,其他关系变量都定义为静态类变量;")])]),a._v(" "),e("li",[e("p",[a._v("一般情况下数据对象无需定义规格说明,定义了规格说明以后, 利用框架内置的规格说明实现功能, 可以轻而易举实现很多功能, 这在后面会进一步详细说明;")])]),a._v(" "),e("li",[e("p",[a._v("通过代码生成数据对象类说明的时候,会自动生成相应的数据对象的规格说明配置变量;")])]),a._v(" "),e("li",[e("p",[a._v("如果未按照"),e("RouterLink",{attrs:{to:"/core/database/"}},[a._v("数据库原型设计规范")]),a._v("定义数据库, 则需要按本文说明手动配置数据对象的规格说明配置变量。")],1)])]),a._v(" "),e("h2",{attrs:{id:"详细说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细说明"}},[a._v("#")]),a._v(" 详细说明")]),a._v(" "),e("h3",{attrs:{id:"field-spec-列规格定义说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#field-spec-列规格定义说明"}},[a._v("#")]),a._v(" $field_spec:列规格定义说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("数据对象定义需定义字段: public $field_spec, 它定义了当前数据对象的列规格说明。")])]),a._v(" "),e("li",[e("p",[a._v("定义形式如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("public $field_spec = array(\n    EnumColumnNameDefault::ID         => 'id',\n    EnumColumnNameDefault::COMMITTIME => 'publishTime',\n    EnumDataSpec::REMOVE              => array(\n        'updateTime'\n    ),\n    EnumDataSpec::MANY_MANY_TABLE     => array(\n        // 多对多关系类名 => 多对多关系表名\n    ),\n    EnumDataSpec::FOREIGN_ID => array(\n        // 类名 => 外键名\n        // 实例对象名 => 外键名[在从属于一对一关系类名中经常遇到, 比如家庭地址中省|市|区都关联同一个类:地区；需要用实例对象名]\n    )\n);\n")])])])])]),a._v(" "),e("h4",{attrs:{id:"基本定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("在数据对象的列规格里")]),a._v(" "),e("ol",[e("li",[a._v("$key->$value说明是: DataObject默认列名->列别名。")])]),a._v(" "),e("p",[a._v("它主要用于与第三方WEB应用整合时, 可能数据对象表唯一标识定义为$table_id,如用户表的唯一标识是: user_id;")]),a._v(" "),e("p",[a._v("在框架中设计当列名有别名时, 以列别名去表中查找相应列。")]),a._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[a._v("remove:在数据对象中移除不需要持久化的列。")])]),a._v(" "),e("p",[a._v("如数据对象中不需要列commitTime或者updateTime数据列时, 只需要在其中声明, 其中声明的列即不在框架的持久层中进行存储。")]),a._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[a._v("many_many_table:多对多关系表名称定义, 如无定义, 则按默认规则查找指定表。")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("多对多表名默认规则:")]),a._v(" "),e("ul",[e("li",[a._v("多对多【主控端-即定义为$many_many】:数据库表名前缀+“"),e("em",[a._v("”+[文件夹目录+“")]),a._v('”]...+TABLENAME_RELATION+"_"+主表名+关系表名。')]),a._v(" "),e("li",[a._v("如User和Role是多对多关系, 数据库表名前缀为bb,文件夹目录是user,TABLENAME_RELATION是re；那么在User里定义$many_many包含:Role;则对应的表名是: bb_user_re_userrole.")]),a._v(" "),e("li",[a._v("多对多【从属端-即定义为$belongs_many_many】:数据库表名前缀+“"),e("em",[a._v("”+[文件夹目录+“")]),a._v('”]...+TABLENAME_RELATION+"_"+关系表名+主表名。')]),a._v(" "),e("li",[a._v("如User和Role是多对多关系, 数据库表名前缀为bb,文件夹目录是user,TABLENAME_RELATION是re；那么在Role里定义$belongs_many_many包含:User;则对应的表名是:bb_user_re_userrole.")])])])]),a._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[a._v("foreign_id: 在对象之间或者说表之间存在一对一, 一对多, 多对多的关系时, 可通过它指定外键的名称, 如果没有指定, 则按默认定义。")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("外键的名称默认定义:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v('一对一:【关系表类名+"_"+id】；注意关系表类名头字母小写')]),a._v(" "),e("ul",[e("li",[a._v("如UserDetail和User是一对一关系, 则在UserDetail中对应User的外键就是: user_id。")]),a._v(" "),e("li",[a._v("在User中定义"),e("code",[a._v("$has_one")]),a._v("是UserDetail, 在UserDetail定义"),e("code",[a._v("$belong_has_one")]),a._v("是User")])])]),a._v(" "),e("li",[e("p",[a._v('一对多:【关系表类名+"_"+id】；注意关系表类名头字母小写')]),a._v(" "),e("ul",[e("li",[a._v("如Department和User是一对多关系, 则在User中对应Department的外键就是: department_id")]),a._v(" "),e("li",[a._v("在User中定义"),e("code",[a._v("$belong_has_one")]),a._v("是Department, 在Department中定义"),e("code",[a._v("$has_many")]),a._v("是User。")])])]),a._v(" "),e("li",[e("p",[a._v("多对多【主控端】:多对多关系会产生一张中间表,它定义在EnumDataSpec::MANY_MANY_TABLE里,")]),a._v(" "),e("ul",[e("li",[a._v("注意表类名头字母小写。")]),a._v(" "),e("li",[a._v('主表类外键名称: 【主表类名+"'),e("em",[a._v('"+id】, 关系表类外键名称: 【关系表类名+"')]),a._v('"+id】')])])]),a._v(" "),e("li",[e("p",[a._v("多对多【从属端】:多对多关系会产生一张中间表,它定义在EnumDataSpec::MANY_MANY_TABLE里,")]),a._v(" "),e("ul",[e("li",[a._v("注意表类名头字母小写。")]),a._v(" "),e("li",[a._v('主表类外键名称: 【主表类名+"'),e("em",[a._v('"+id】, 关系表类外键名称: 【关系表类名+"')]),a._v('"+id】')])])])])])])]),a._v(" "),e("li",[e("p",[a._v("说明: $field_spec_default为默认的数据对象的列规格说明, 它全局的定义了当前应用的列规格说明；")])])]),a._v(" "),e("h4",{attrs:{id:"示例说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("示例1:用户详细信息定义列规格说明如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('public $field_spec = array(\n    EnumDataSpec::FOREIGN_ID => array(\n        \'country_r\'  => "country",\n        "province_r" => "province",\n        "city_r"     => "city",\n        \'district_r\' => "district"\n    )\n);\n')])])])]),a._v(" "),e("li",[e("p",[a._v("示例2:用户角色列规格说明如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("public $field_spec = array(\n    EnumDataSpec::REMOVE => array(\n        'commitTime',\n        'updateTime'\n    )\n);\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"has-one-一对一关系说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#has-one-一对一关系说明"}},[a._v("#")]),a._v(" $has_one:一对一关系说明")]),a._v(" "),e("h4",{attrs:{id:"基本定义-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义-2"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[a._v("相对于"),e("RouterLink",{attrs:{to:"/core/database/database_define.html"}},[a._v("数据库定义")]),a._v(", 表关系定义: 一对一[has_one]")],1),a._v(" "),e("li",[a._v("例如示例项目中\n"),e("ul",[e("li",[a._v("主数据对象:User")]),a._v(" "),e("li",[a._v("从数据对象:Userdetail")]),a._v(" "),e("li",[a._v("用户[主数据对象]和用户详情[从数据对象]就是一对一关系")])])])]),a._v(" "),e("h4",{attrs:{id:"示例说明-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明-2"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("定义示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('class User extends DataObject {\n    static $has_one = array(\n        "userDetail" => "UserDetail",\n    );\n')])])])]),a._v(" "),e("li",[e("p",[a._v("调用示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$user       = User::getById( 1 );\n$userdetail = $user->userdetail;\nprint_r($userdetail);\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"belong-has-one-从属一对一关系说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#belong-has-one-从属一对一关系说明"}},[a._v("#")]),a._v(" $belong_has_one:从属一对一关系说明")]),a._v(" "),e("h4",{attrs:{id:"基本定义-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义-3"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("相对于"),e("RouterLink",{attrs:{to:"/core/database/database_define.html"}},[a._v("数据库定义")]),a._v(", 表关系定义:从属于一对一[belong_has_one]")],1)]),a._v(" "),e("li",[e("p",[a._v("例如示例项目中")]),a._v(" "),e("ul",[e("li",[a._v("主数据对象: User")]),a._v(" "),e("li",[a._v("从数据对象: Userdetail")]),a._v(" "),e("li",[a._v("用户详情[从数据对象]和用户[主数据对象]就是从属于一对一关系")])])])]),a._v(" "),e("h4",{attrs:{id:"示例说明-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明-3"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("定义示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('class Userdetail extends DataObject {\n    static $belongs_has_one = array(\n        "user" => "User"\n    );\n')])])])]),a._v(" "),e("li",[e("p",[a._v("调用示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$userdetail = Userdetail::getById( 1 );\n$user       = $userdetail->user;\nprint_r($user);\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"has-many-一对多关系说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#has-many-一对多关系说明"}},[a._v("#")]),a._v(" $has_many:一对多关系说明")]),a._v(" "),e("h4",{attrs:{id:"基本定义-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义-4"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("相对于"),e("RouterLink",{attrs:{to:"/core/database/database_define.html"}},[a._v("数据库定义")]),a._v(", 一对多[has_many]")],1)]),a._v(" "),e("li",[e("p",[a._v("例如示例项目中")]),a._v(" "),e("ul",[e("li",[a._v("主数据对象:Blog")]),a._v(" "),e("li",[a._v("从数据对象:Comment")]),a._v(" "),e("li",[a._v("博客[主数据对象]和评论[从数据对象]就是一对多关系")])])])]),a._v(" "),e("h4",{attrs:{id:"示例说明-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明-4"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("定义示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('class Blog extends DataObject {\n    static $has_many = array(\n        "comments" => "Comment",\n    );\n')])])])]),a._v(" "),e("li",[e("p",[a._v("调用示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$blog     = Blog::getById( 1 );\n$comments = $blog->comments;\nprint_r($comments);\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"many-many-多对多关系说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#many-many-多对多关系说明"}},[a._v("#")]),a._v(" $many_many:多对多关系说明")]),a._v(" "),e("h4",{attrs:{id:"基本定义-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义-5"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("相对于"),e("RouterLink",{attrs:{to:"/core/database/database_define.html"}},[a._v("数据库定义")]),a._v(", 多对多[many_many]")],1)]),a._v(" "),e("li",[e("p",[a._v("例如示例项目中")]),a._v(" "),e("ul",[e("li",[a._v("主数据对象:User")]),a._v(" "),e("li",[a._v("从数据对象:Role")]),a._v(" "),e("li",[a._v("多对多关系数据对象:Userrole")]),a._v(" "),e("li",[a._v("用户[主数据对象]和角色[从数据对象]就是多对多关系")])])])]),a._v(" "),e("h4",{attrs:{id:"示例说明-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明-5"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[a._v("定义示例:"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('class User extends DataObject {\n    static $many_many = array(\n        "roles" => "Role",\n    );\n')])])])]),a._v(" "),e("li",[a._v("调用示例:"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$user  = User::getById( 1 );\n$roles = $user->roles;\nprint_r($roles);\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"belongs-many-many-从属于多对多关系说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#belongs-many-many-从属于多对多关系说明"}},[a._v("#")]),a._v(" $belongs_many_many:从属于多对多关系说明")]),a._v(" "),e("h4",{attrs:{id:"基本定义-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本定义-6"}},[a._v("#")]),a._v(" 基本定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("相对于"),e("RouterLink",{attrs:{to:"/core/database/database_define.html"}},[a._v("数据库定义")]),a._v(", 表关系定义:从属于多对多[belongs_many_many]")],1)]),a._v(" "),e("li",[e("p",[a._v("例如示例项目中")]),a._v(" "),e("ul",[e("li",[a._v("主数据对象:User")]),a._v(" "),e("li",[a._v("从数据对象:Role")]),a._v(" "),e("li",[a._v("多对多关系数据对象:Userrole")]),a._v(" "),e("li",[a._v("角色[从数据对象]和用户[主数据对象]就是从属于多对多关系")])])])]),a._v(" "),e("h4",{attrs:{id:"示例说明-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例说明-6"}},[a._v("#")]),a._v(" 示例说明")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("定义示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('class Role extends DataObject {\n    static $belongs_many_many = array(\n        "users" => "User"\n    );\n')])])])]),a._v(" "),e("li",[e("p",[a._v("调用示例:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$role  = Role::getById( 1 );\n$users = $role->users;\nprint_r($users);\n")])])])])]),a._v(" "),e("h2",{attrs:{id:"更多说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更多说明"}},[a._v("#")]),a._v(" 更多说明")]),a._v(" "),e("p",[a._v("数据对象规格说明定义变量总共就5个,值得说明一下的是这些变量涉及的实现策略和规律总结, 以下对其进行进一步的说明, 有兴趣的朋友可以了解一下")]),a._v(" "),e("h3",{attrs:{id:"数据对象默认关键字定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据对象默认关键字定义"}},[a._v("#")]),a._v(" 数据对象默认关键字定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("枚举类名称定义: EnumDataObjectDefaultKeyword")])]),a._v(" "),e("li",[e("p",[a._v("详细定义:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("NAME_FIELD_SPEC:field_spec")]),a._v(" "),e("p",[a._v("自定义列规格说明的名称。")])]),a._v(" "),e("li",[e("p",[a._v("NAME_IDNAME_STRATEGY:idname_strategy")]),a._v(" "),e("p",[a._v("ID名称定义的策略的名称")])]),a._v(" "),e("li",[e("p",[a._v("NAME_IDNAME_CONCAT:idname_concat")]),a._v(" "),e("p",[a._v("ID名称中的连接符的名称")])]),a._v(" "),e("li",[e("p",[a._v("NAME_FOREIGNIDNAME_STRATEGY:foreignid_name_strategy")]),a._v(" "),e("p",[a._v("Foreign ID名称定义的策略的名称")])]),a._v(" "),e("li",[e("p",[a._v("NAME_FOREIGNID_CONCAT:foreignid_concat")]),a._v(" "),e("p",[a._v("Foreign ID名称中的连接符的名称,Foreign ID名称定义的策略为TABLENAME_ID有效")])])])])]),a._v(" "),e("h3",{attrs:{id:"数据库关联模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库关联模式"}},[a._v("#")]),a._v(" 数据库关联模式")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("枚举类名称定义: EnumTableRelation")])]),a._v(" "),e("li",[e("p",[a._v("详细定义:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("HAS_ONE:has_one")]),a._v(" "),e("p",[a._v("一对一关联")])]),a._v(" "),e("li",[e("p",[a._v("BELONG_HAS_ONE:belong_has_one")]),a._v(" "),e("p",[a._v("从属一对一关联, 即主表中一字段关联关系表中的主键")])]),a._v(" "),e("li",[e("p",[a._v("HAS_MANY:has_many")]),a._v(" "),e("p",[a._v("一对多关联")])]),a._v(" "),e("li",[e("p",[a._v("MANY_MANY:many_many")]),a._v(" "),e("p",[a._v("多对多关联")])]),a._v(" "),e("li",[e("p",[a._v("BELONGS_TO:belongs_many_many")]),a._v(" "),e("p",[a._v("从属多对多关联")])])])])]),a._v(" "),e("h3",{attrs:{id:"数据对象默认列定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据对象默认列定义"}},[a._v("#")]),a._v(" 数据对象默认列定义")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("枚举类名称定义: EnumColumnNameDefault")])]),a._v(" "),e("li",[e("p",[a._v("详细定义:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("ID:id")]),a._v(" "),e("p",[a._v("数据对象的唯一标识")])]),a._v(" "),e("li",[e("p",[a._v("COMMITTIME:commitTime")]),a._v(" "),e("p",[a._v("数据创建的时间")])]),a._v(" "),e("li",[e("p",[a._v("UPDATETIME:updateTime")]),a._v(" "),e("p",[a._v("数据最后更新的时间")])])])])]),a._v(" "),e("h3",{attrs:{id:"id名称定义的策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id名称定义的策略"}},[a._v("#")]),a._v(" ID名称定义的策略")]),a._v(" "),e("ul",[e("li",[a._v("枚举类名称定义: EnumIDNameStrategy")]),a._v(" "),e("li",[a._v("详细定义:\n"),e("ul",[e("li",[e("p",[a._v("NONE:-1")]),a._v(" "),e("p",[a._v("无策略;说明: 需要在数据对象类里定义$field_spec；说明ID别名。")])]),a._v(" "),e("li",[e("p",[a._v("ID:0")]),a._v(" "),e("p",[a._v("ID名称为: id")])]),a._v(" "),e("li",[e("p",[a._v("TABLENAMEID:1")]),a._v(" "),e("p",[a._v("ID名称为:对象名+'id';如果对象名为User,则ID名称为:userid【头字母大小写均可】")])]),a._v(" "),e("li",[e("p",[a._v("TABLENAME_ID:2")]),a._v(" "),e("p",[a._v("ID名称为:对象名+连接符+'id';如果对象名为User,连接符为'_';则ID名称为:user_id【头字母大小写均可】")])])])])]),a._v(" "),e("h3",{attrs:{id:"数据对象列规格默认列定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据对象列规格默认列定义"}},[a._v("#")]),a._v(" 数据对象列规格默认列定义")]),a._v(" "),e("ul",[e("li",[a._v("枚举类名称定义:EnumDataSpec")]),a._v(" "),e("li",[a._v("详细定义:\n"),e("ul",[e("li",[e("p",[a._v("REMOVE:remove")]),a._v(" "),e("p",[a._v("数据对象定义中需要移除的列")])]),a._v(" "),e("li",[e("p",[a._v("MANY_MANY_TABLE:many_many_table")]),a._v(" "),e("p",[a._v("多对多关系表名称定义, 如无定义, 则按默认规则查找指定表。")])]),a._v(" "),e("li",[e("p",[a._v("FOREIGN_ID:foreign_id")]),a._v(" "),e("p",[a._v("数据对象外键名称定义, 如无定义, 则按默认规则查找指定外键。")])])])])]),a._v(" "),e("h2",{attrs:{id:"项目默认配置统一调整"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目默认配置统一调整"}},[a._v("#")]),a._v(" 项目默认配置统一调整")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("以上配置的使用都定义在文件DataObject.php里, 所有的数据对象都继承它, 默认都采用在该文件中的配置; 作者推荐尽量使用该配置;")])]),a._v(" "),e("li",[e("p",[a._v("如果在实际项目中, 确实需要调整该配置, 可以通过以上配置说明中的值进行定制。")])]),a._v(" "),e("li",[e("p",[a._v("路径   : core/model/")])]),a._v(" "),e("li",[e("p",[a._v("文件名称: DataObject.php")])]),a._v(" "),e("li",[e("p",[a._v("详细定义:")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("public static $idname_strategy = EnumIDNameStrategy::TABLENAME_ID;")]),a._v(" "),e("p",[a._v("ID名称定义的策略")])]),a._v(" "),e("li",[e("p",[a._v("public static $idname_concat = '_';")]),a._v(" "),e("p",[a._v("ID名称中的连接符。ID名称定义的策略为TABLENAME_ID有效。")])]),a._v(" "),e("li",[e("p",[a._v("public static $foreignid_name_strategy = EnumForeignIDNameStrategy::TABLENAME_ID;")]),a._v(" "),e("p",[a._v("Foreign ID名称定义的策略")])]),a._v(" "),e("li",[e("p",[a._v("$foreignid_concat = '_';")]),a._v(" "),e("p",[a._v("Foreign ID名称中的连接符。Foreign ID名称定义的策略为TABLENAME_ID有效。")])])])])])])}),[],!1,null,null,null);_.default=v.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{432:function(e,r,t){"use strict";t.r(r);var o=t(56),n=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"betterlife-docker-readme"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#betterlife-docker-readme"}},[e._v("#")]),e._v(" Betterlife Docker README")]),e._v(" "),t("h2",{attrs:{id:"开发初步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发初步"}},[e._v("#")]),e._v(" 开发初步")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("Get Started with Docker"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/docker-for-mac/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Get started with Docker Desktop for Mac"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/reference/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reference documentation"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/content/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker — 从入门到实践"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/get-started/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Get started"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/docker/labs/tree/master/beginner/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker for Beginners"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/samples/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Samples"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://hub.docker.com/?overlay=onboarding",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Hub"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://hub.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DaoCloud 镜像市场"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("搜索镜像[PHP]: docker search php")])]),e._v(" "),t("li",[t("p",[e._v("第一个docker应用: docker run hello-world")])]),e._v(" "),t("li",[t("p",[e._v("开始启动nginx: docker run --detach --publish=80:80 --name=webserver nginx")])]),e._v(" "),t("li",[t("p",[e._v('指定端口:docker run --name static-site -e AUTHOR="skygreen2001" -d -p 8888:80 dockersamples/static-site')])]),e._v(" "),t("li",[t("p",[e._v("开始启动ubuntu系统: docker run -it ubuntu bash")])]),e._v(" "),t("li",[t("p",[e._v("打开容器命令行工具 : docker exec -it brave_payne[容器名称] /bin/bash\ndocker exec -it brave_payne[容器名称] /bin/sh")])]),e._v(" "),t("li",[t("p",[e._v("使用vi: apt-get update && apt-get install vim")])]),e._v(" "),t("li",[t("p",[e._v("使用ifconfig和ping: apt-get update && apt install net-tools && apt install iputils-ping")])]),e._v(" "),t("li",[t("p",[e._v('查看IP信息: docker inspect brave_payne[容器名称] | grep "IPAddress"')])]),e._v(" "),t("li",[t("p",[e._v("从容器拷贝文件到宿主机: docker cp 容器名:容器中要拷贝的文件名及其路径 要拷贝到宿主机里面对应的路径")]),e._v(" "),t("ul",[t("li",[e._v("docker cp 17dbf5447e99:/usr/share/nginx/html/test.php /Users/master/Downloads/")])])]),e._v(" "),t("li",[t("p",[e._v("从宿主机拷贝文件到容器: docker cp 宿主机中要拷贝的文件名及其路径 容器名:要拷贝到容器里面对应的路径")]),e._v(" "),t("ul",[t("li",[e._v("docker cp /Users/master/Downloads/test.php 17dbf5447e99:/usr/share/nginx/html/")])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/get-started/09_image_best/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Image-building best practices"),t("OutboundLink")],1)])])]),e._v(" "),t("h2",{attrs:{id:"centos-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装-docker"}},[e._v("#")]),e._v(" Centos 安装 Docker")]),e._v(" "),t("ul",[t("li",[e._v("安装lsof: yum install lsof (查看端口是否被占用)")]),e._v(" "),t("li",[e._v("Install Docker Engine on CentOS: https://docs.docker.com/engine/install/centos/")]),e._v(" "),t("li",[e._v("Configure Docker to start on boot: https://docs.docker.com/engine/install/linux-postinstall/")]),e._v(" "),t("li",[e._v("Play with Docker (PWD): https://labs.play-with-docker.com")])]),e._v(" "),t("h2",{attrs:{id:"ubuntu-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-安装-docker"}},[e._v("#")]),e._v(" Ubuntu 安装 Docker")]),e._v(" "),t("ul",[t("li",[e._v("Install Docker Engine on Ubuntu: https://docs.docker.com/engine/install/ubuntu/")]),e._v(" "),t("li",[e._v("Configure Docker to start on boot: https://docs.docker.com/engine/install/linux-postinstall/")]),e._v(" "),t("li",[e._v("Play with Docker (PWD): https://labs.play-with-docker.com")])]),e._v(" "),t("h2",{attrs:{id:"常用指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[e._v("#")]),e._v(" 常用指令")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("docker --help")])]),e._v(" "),t("li",[t("p",[e._v("列出镜像: docker images")])]),e._v(" "),t("li",[t("p",[e._v("删除1到多个镜像: docker rmi IMAGE_ID1 IMAGE_ID2")])]),e._v(" "),t("li",[t("p",[e._v("查看最新前3个的container: docker ps -n 3")])]),e._v(" "),t("li",[t("p",[e._v("查看所有的container(包括停止的): docker ps -a")])]),e._v(" "),t("li",[t("p",[e._v("容器取名: docker container rename ef7b5043e9b4 bb")])]),e._v(" "),t("li",[t("p",[e._v("Docker stats for containers: docker stats")])]),e._v(" "),t("li",[t("p",[e._v("开始一个container: docker start $CONTAINER_ID")]),e._v(" "),t("ul",[t("li",[e._v("开始container: docker start $CONTAINER_NAME(docker run 需指定名称 --name $CONTAINER_NAME)")])])]),e._v(" "),t("li",[t("p",[e._v("关闭1到多个container: docker stop $CONTAINER_ID")]),e._v(" "),t("ul",[t("li",[e._v("关闭container: docker stop $CONTAINER_NAME(docker run 需指定名称 --name $CONTAINER_NAME)")])])]),e._v(" "),t("li",[t("p",[e._v("删除1到多个container: docker rm $CONTAINER_ID1 $CONTAINER_ID2")])]),e._v(" "),t("li",[t("p",[e._v("清理所有处于终止状态的容器: docker container prune")])]),e._v(" "),t("li",[t("p",[e._v("删除所有容器的命令: docker rm -f "),t("code",[e._v("docker ps -a | awk '{print $1}' | grep [0-9a-z]")])])]),e._v(" "),t("li",[t("p",[e._v("删除所有镜像的命令: docker rmi -f "),t("code",[e._v("docker images | awk '{print $3}' | grep [0-9a-z]")]),e._v("\n- docker rmi -f $(docker images | awk '/^"),t("none",[e._v("/ { print $3 }')")])],1)]),e._v(" "),t("li",[t("p",[e._v("查看日志: docker logs -f [OPTIONS] CONTAINER")])]),e._v(" "),t("li",[t("p",[e._v("查看文件变动: docker diff CONTAINER_ID")])]),e._v(" "),t("li",[t("p",[e._v("创建镜像并上传")]),e._v(" "),t("ul",[t("li",[e._v("安全检查: docker scan getting-started [image-name]")]),e._v(" "),t("li",[e._v("检查创建中每层大小: docker image history getting-started [image-name]")]),e._v(" "),t("li",[e._v("创建镜像: docker build -t getting-started [image-name] .")]),e._v(" "),t("li",[e._v("运行创建的镜像: docker run -dp 3000:3000 getting-started [image-name]")]),e._v(" "),t("li",[e._v("登录到docker hub: docker login -u [YOUR-USER-NAME]")]),e._v(" "),t("li",[e._v("标记需提交的镜像:docker tag getting-started [image-name] YOUR-USER-NAME/getting-started [image-name]")]),e._v(" "),t("li",[e._v("提交到hub: docker push YOUR-USER-NAME/getting-started [image-name]")]),e._v(" "),t("li",[e._v("hub上查询提交的镜像: https://hub.docker.com  -> 搜索:  YOUR-USER-NAME/getting-started")]),e._v(" "),t("li",[e._v("如果本地已经存在，需要更新镜像: docker pull YOUR-USER-NAME/getting-started [image-name]")]),e._v(" "),t("li",[e._v("运行推送的hub: docker run -dp 3000:3000 YOUR-USER-NAME/getting-started [image-name]")])])]),e._v(" "),t("li",[t("p",[e._v("创建一个数据卷: docker volume create my-vol")])]),e._v(" "),t("li",[t("p",[e._v("查看所有的数据卷: docker volume ls")])]),e._v(" "),t("li",[t("p",[e._v("查看数据卷信息: docker volume inspect my-vol")])]),e._v(" "),t("li",[t("p",[e._v("删除数据卷: docker volume rm my-vol")])]),e._v(" "),t("li",[t("p",[e._v("挂载数据卷: docker run -d -P --name web --mount source=my-vol,target=/usr/share/nginx/html nginx:alpine\ndocker run -dp 82:80 -v my-vol:/usr/share/nginx/html nginx:alpine")])]),e._v(" "),t("li",[t("p",[e._v("挂载主机目录: docker run -d -P --name web --mount type=bind,source=/Library/WebServer/Documents/,target=/usr/share/nginx/html nginx:alpine")])]),e._v(" "),t("li",[t("p",[e._v("创建网络: docker network create todo-app")])]),e._v(" "),t("li",[t("p",[e._v("网络列表: docker network list")])]),e._v(" "),t("li",[t("p",[e._v("docker-compose")]),e._v(" "),t("ul",[t("li",[e._v("Build or rebuild services: docker-compose build")]),e._v(" "),t("li",[e._v("查看验证文件配置: docker-compose config")]),e._v(" "),t("li",[e._v("后台启动: docker-compose up -d")]),e._v(" "),t("li",[e._v("List current running Containers: docker-compose ps")]),e._v(" "),t("li",[e._v("Close all running Containers: docker-compose stop")]),e._v(" "),t("li",[e._v("删除Delete all existing Containers: docker-compose down")]),e._v(" "),t("li",[e._v("Compose查看日志: docker-compose logs -f")])])])]),e._v(" "),t("h2",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[e._v("#")]),e._v(" Docker Compose")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Overview of Docker Compose"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.runoob.com/docker/docker-compose.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Compose"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.jhipster.tech/docker-compose/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker and Docker Compose"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.cn/post/6844904038627033095",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 docker-compose 构建你的项目"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.cloudsigma.com/deploying-laravel-nginx-and-mysql-with-docker-compose/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deploying Laravel, Nginx, and MySQL with Docker Compose"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kkmike999/docker-compose-php-nginx-mysql",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker-compose搭建nginx+php+mysql"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"在ide中使用docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在ide中使用docker"}},[e._v("#")]),e._v(" 在IDE中使用Docker")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://code.visualstudio.com/docs/containers/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker in Visual Studio Code"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("所有Docker的指令操作: opening the Command Palette [⇧⌘P] and using Docker:")]),e._v(" "),t("li",[e._v("Docker commands | Docker Explorer | Docker Compose")]),e._v(" "),t("li",[e._v("Docker Explorer -> HELP AND FEEDBACK -> Open Docker Extension Walkthrough")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://code.visualstudio.com/docs/remote/containers",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode - Developing inside a Container"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://code.visualstudio.com/docs/remote/create-dev-container",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode - Create a development container"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://code.visualstudio.com/docs/remote/containers-tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode - Remote development in Containers"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("VSCode安装extension: Remote - Containers")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.jetbrains.com/help/idea/docker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IDEA - Docker"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000022026960",target:"_blank",rel:"noopener noreferrer"}},[e._v("IDEA - 使用IDEA的Docker插件快速实现Docker镜像构建和部署"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"docker开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker开发"}},[e._v("#")]),e._v(" Docker开发")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.docker.com/language/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Language-specific guides"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.docker.com/develop/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Develop with Docker"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"php"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#php"}},[e._v("#")]),e._v(" PHP")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("安装PHP运行环境")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/image/multistage-builds/laravel",target:"_blank",rel:"noopener noreferrer"}},[e._v("实战多阶段构建 Laravel 镜像"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/khs1994-docker/lnmp",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Docker Compose 搭建了一套 LNMP 环境"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/voocel/docker-lnmp",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Docker部署LNMP+Redis环境"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gist.github.com/giansalex/2776a4206666d940d014792ab4700d80",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker-php-ext-install.md"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.docker.com/compose/environment-variables/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Environment variables in Compose"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://bitpress.io/simple-approach-using-docker-with-php/",target:"_blank",rel:"noopener noreferrer"}},[e._v("My Simple Approach to using Docker and PHP"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/khs1994-docker/laravel-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-demo"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[e._v("安装PHP开发环境")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://laradock.io/documentation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Laradock is a full PHP development environment based on Docker"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://phpdocker.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHPDocker"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/iMacken/DevDock",target:"_blank",rel:"noopener noreferrer"}},[e._v("DevDock"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://rodrigodelimavieira.com/docker-development-environment-for-php-apps-cju2vko5r000csms18kzo1tgl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Development Environment for PHP Apps"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.pascallandau.com/blog/php-php-fpm-and-nginx-on-docker-in-windows-10/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Setting up PHP, PHP-FPM and NGINX for local development on DockerA primer on PHP on Docker under Windows 10"),t("OutboundLink")],1)])])])]),e._v(" "),t("h2",{attrs:{id:"kubernetes-初步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-初步"}},[e._v("#")]),e._v(" Kubernetes 初步")]),e._v(" "),t("ul",[t("li",[e._v("使用 Docker Desktop 可以很方便的启用 Kubernetes: https://yeasy.gitbook.io/docker_practice/setup/docker-desktop")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AliyunContainerService/k8s-for-docker-desktop",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Desktop for Mac/Windows 开启 Kubernetes"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);
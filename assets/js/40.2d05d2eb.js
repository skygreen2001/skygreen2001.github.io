(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{435:function(e,t,l){"use strict";l.r(t);var r=l(56),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"docker-安装-betterlife"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-betterlife"}},[e._v("#")]),e._v(" Docker 安装 betterlife")]),e._v(" "),l("h2",{attrs:{id:"运行须知"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#运行须知"}},[e._v("#")]),e._v(" 运行须知")]),e._v(" "),l("ul",[l("li",[e._v("Docker容器主要配置是Lnmp: Linux(Ubuntu) + nginx + mysql + php\n"),l("ul",[l("li",[e._v("php安装有组件: gd, redis,  mysqli zip")]),e._v(" "),l("li",[e._v("php安装组件可在install/docker/Dockerfile 文件里进行添加会修改删除。")])])]),e._v(" "),l("li",[e._v("可在本地编辑php源文件，所见即所得，会立即在容器内生效运行生成结果。")]),e._v(" "),l("li",[e._v("docker配置文件在安装路径下: install/docker/Dockerfile")]),e._v(" "),l("li",[e._v("docker-compose配置文件在根路径下: docker-compose.yml")]),e._v(" "),l("li",[e._v("在容器内运行还需修改Gc.php文件相应配置\n"),l("ul",[l("li",[e._v("数据库配置: $database_config\n"),l("ul",[l("li",[e._v('$database_config -> host = "mysql"\n'),l("ul",[l("li",[e._v("数据库的主机需配置为mysql，这是因为容器mysql服务器在docker-compose.yml配置中的服务名称定义就是mysql，这样php才能连上数据库。")]),e._v(" "),l("li",[e._v("数据库其它配置也参考docker-compose.yml中mysql定义配置进行修改")])])])])])])])]),e._v(" "),l("h2",{attrs:{id:"设置权限"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#设置权限"}},[e._v("#")]),e._v(" 设置权限")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("由于是通过volume映射到容器内，容器内文件夹的权限由宿主机文件夹的权限决定，因此需要在宿主机本地执行以下指令赋予读写权限。")])]),e._v(" "),l("li",[l("p",[e._v("也可在容器运行起来后，进入容器内应用的文件位置执行以下指令赋予读写权限。")])]),e._v(" "),l("li",[l("p",[e._v("根路径下运行")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("  sudo mkdir -p upload\n  sudo chmod -R 777 upload\n  sudo mkdir -p log\n  sudo chmod -R 777 log\n  sudo mkdir -p home/betterlife/view/bootstrap/tmp/templates_c\n  sudo chmod -R 777 home/betterlife/view/bootstrap/tmp/templates_c\n  sudo mkdir -p home/admin/view/default/tmp/templates_c\n  sudo chmod -R 777 home/admin/view/default/tmp/templates_c\n  sudo mkdir -p home/model/view/default/tmp/templates_c\n  sudo chmod -R 777 home/model/view/default/tmp/templates_c\n  sudo mkdir -p home/report/view/default/tmp/templates_c\n  sudo chmod -R 777 home/report/view/default/tmp/templates_c\n")])])])])]),e._v(" "),l("h2",{attrs:{id:"复制容器文件到本地"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#复制容器文件到本地"}},[e._v("#")]),e._v(" 复制容器文件到本地")]),e._v(" "),l("ul",[l("li",[e._v("该操作为可选项，根据自己的需求决定:\n"),l("ul",[l("li",[e._v("复制安装的composer包文件到本地: docker cp bb:/var/www/html/betterlife/install/vendor/ $(pwd)/install/")]),e._v(" "),l("li",[e._v("复制安装好的UEditor包文件到本地: docker cp bb:/var/www/html/betterlife/misc/js/onlineditor/ueditor/ $(pwd)/misc/js/onlineditor/")])])])]),e._v(" "),l("h2",{attrs:{id:"本地开发调试应用"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#本地开发调试应用"}},[e._v("#")]),e._v(" 本地开发调试应用")]),e._v(" "),l("ul",[l("li",[e._v("使用调试工具: Xdebug")]),e._v(" "),l("li",[e._v("主要用于在本地无法安装Xdebug的情况")]),e._v(" "),l("li",[e._v("需要安装Docker工具")]),e._v(" "),l("li",[e._v("使用开发工具: Visual Studio Code\n"),l("ul",[l("li",[e._v("调试配置文件: .vscode/launch.json")])])]),e._v(" "),l("li",[e._v("修改配置文件: install/docker/Dockerfile\n"),l("ul",[l("li",[e._v("取消调试注释部分: debug with xdebug")])])]),e._v(" "),l("li",[e._v("在 Visual Studio Code 里开启调试模式")])]),e._v(" "),l("h2",{attrs:{id:"docker-hub下载运行"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#docker-hub下载运行"}},[e._v("#")]),e._v(" Docker Hub下载运行")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("从Docker Hub拉取betterlife镜像并运行")]),e._v(" "),l("ul",[l("li",[e._v("Docker Hub上查询镜像: https://hub.docker.com  -> 搜索: skygreen2021/betterlife")]),e._v(" "),l("li",[e._v("执行以下命令即可")]),e._v(" "),l("li",[l("RouterLink",{attrs:{to:"/core/install/docker/LEARN.html#Lemp"}},[e._v("以下说明")])],1)]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("  docker run -dp 80:80 --name betterlife -t skygreen2021/betterlife\n  docker exec -it betterlife bash -c 'mysql betterlife < /var/www/install/db/mysql/db_betterlife.sql'\n")])])]),l("ul",[l("li",[e._v("停止应用     : docker stop betterlife")]),e._v(" "),l("li",[e._v("删除所有的容器: docker rm betterlife")]),e._v(" "),l("li",[e._v("删除生成的镜像: docker rmi skygreen2021/betterlife")])])])]),e._v(" "),l("h2",{attrs:{id:"其它"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[e._v("#")]),e._v(" 其它")]),e._v(" "),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/core/install/docker/LEARN.html"}},[e._v("学习使用Docker实战betterlife")]),e._v(" "),l("ul",[l("li",[e._v("这一部分主要用于学习使用Docker实战betterlife，有空的时间可以看看，这一部分主要包括:\n"),l("ul",[l("li",[e._v("Docker 多阶段构建betterlife")]),e._v(" "),l("li",[e._v("上传到Docker Hub分享给大家使用betterlife框架")])])]),e._v(" "),l("li",[e._v("使用Laradock")])])],1)])])}),[],!1,null,null,null);t.default=i.exports}}]);